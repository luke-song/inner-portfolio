{"ast":null,"code":"import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useScreen() {\n  const getScreen = () => {\n    if (typeof window !== 'undefined' && window.screen) {\n      return window.screen;\n    }\n\n    return undefined;\n  };\n\n  const [screen, setScreen] = useState(getScreen());\n\n  function handleSize() {\n    setScreen(getScreen());\n  }\n\n  useEventListener('resize', handleSize);\n  useIsomorphicLayoutEffect(() => {\n    handleSize();\n  }, []);\n  return screen;\n}\n\nexport default useScreen;","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;;AAEA,SAASC,SAAT,GAAkB;AAChB,QAAMC,SAAS,GAAG,MAAK;AACrB,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,MAA5C,EAAoD;AAClD,aAAOD,MAAM,CAACC,MAAd;AACD;;AACD,WAAOC,SAAP;AACD,GALD;;AAOA,QAAM,CAACD,MAAD,EAASE,SAAT,IAAsBR,QAAQ,CAAqBI,SAAS,EAA9B,CAApC;;AAEA,WAASK,UAAT,GAAmB;AACjBD,aAAS,CAACJ,SAAS,EAAV,CAAT;AACD;;AAEDH,kBAAgB,CAAC,QAAD,EAAWQ,UAAX,CAAhB;AAGAP,2BAAyB,CAAC,MAAK;AAC7BO,cAAU;AAEX,GAHwB,EAGtB,EAHsB,CAAzB;AAKA,SAAOH,MAAP;AACD;;AAED,eAAeH,SAAf","names":["useState","useEventListener","useIsomorphicLayoutEffect","useScreen","getScreen","window","screen","undefined","setScreen","handleSize"],"sources":["/Users/hyeonminsong/developer/Three.js/portfolio-inner-site/node_modules/usehooks-ts/src/useScreen/useScreen.ts"],"sourcesContent":["import { useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nfunction useScreen() {\n  const getScreen = () => {\n    if (typeof window !== 'undefined' && window.screen) {\n      return window.screen\n    }\n    return undefined\n  }\n\n  const [screen, setScreen] = useState<Screen | undefined>(getScreen())\n\n  function handleSize() {\n    setScreen(getScreen())\n  }\n\n  useEventListener('resize', handleSize)\n\n  // Set size at the first client-side load\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return screen\n}\n\nexport default useScreen\n"]},"metadata":{},"sourceType":"module"}