{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nfunction useMediaQuery(query) {\n  const getMatches = query => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  };\n\n  const [matches, setMatches] = useState(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\n\nexport default useMediaQuery;","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAoC;AAClC,QAAMC,UAAU,GAAID,KAAD,IAA2B;AAE5C,QAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;AACjC,aAAOA,MAAM,CAACC,UAAP,CAAkBH,KAAlB,EAAyBI,OAAhC;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,QAAM,CAACA,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAUG,UAAU,CAACD,KAAD,CAApB,CAAtC;;AAEA,WAASM,YAAT,GAAqB;AACnBD,cAAU,CAACJ,UAAU,CAACD,KAAD,CAAX,CAAV;AACD;;AAEDH,WAAS,CAAC,MAAK;AACb,UAAMM,UAAU,GAAGD,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAnB;AAGAM,gBAAY;;AAGZ,QAAIH,UAAU,CAACI,WAAf,EAA4B;AAC1BJ,gBAAU,CAACI,WAAX,CAAuBD,YAAvB;AACD,KAFD,MAEO;AACLH,gBAAU,CAACK,gBAAX,CAA4B,QAA5B,EAAsCF,YAAtC;AACD;;AAED,WAAO,MAAK;AACV,UAAIH,UAAU,CAACM,cAAf,EAA+B;AAC7BN,kBAAU,CAACM,cAAX,CAA0BH,YAA1B;AACD,OAFD,MAEO;AACLH,kBAAU,CAACO,mBAAX,CAA+B,QAA/B,EAAyCJ,YAAzC;AACD;AACF,KAND;AAQD,GArBQ,EAqBN,CAACN,KAAD,CArBM,CAAT;AAuBA,SAAOI,OAAP;AACD;;AAED,eAAeL,aAAf","names":["useEffect","useState","useMediaQuery","query","getMatches","window","matchMedia","matches","setMatches","handleChange","addListener","addEventListener","removeListener","removeEventListener"],"sources":["/Users/hyeonminsong/developer/Three.js/portfolio-inner-site/node_modules/usehooks-ts/src/useMediaQuery/useMediaQuery.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return false\n  }\n\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\n\n  function handleChange() {\n    setMatches(getMatches(query))\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query)\n\n    // Triggered at the first client-side load and if query changes\n    handleChange()\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange)\n    } else {\n      matchMedia.addEventListener('change', handleChange)\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange)\n      } else {\n        matchMedia.removeEventListener('change', handleChange)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query])\n\n  return matches\n}\n\nexport default useMediaQuery\n"]},"metadata":{},"sourceType":"module"}