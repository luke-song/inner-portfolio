{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonminsong/developer/Three.js/portfolio-inner-site/src/components/os/DesktopShortcut.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport colors from '../../constants/colors';\nimport { Icon } from '../general';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DesktopShortcut = _ref => {\n  _s();\n\n  let {\n    icon,\n    shortcutName,\n    invertText,\n    onOpen\n  } = _ref;\n  const [isSelected, setIsSelected] = useState(false);\n  const [shortcutId, setShortcutId] = useState('');\n  const [lastSelected, setLastSelected] = useState(false);\n  const containerRef = useRef();\n  const [scaledStyle, setScaledStyle] = useState({});\n\n  const requiredIcon = require(`../../assets/icons/${icon}.png`);\n\n  const [doubleClickTimerActive, setDoubleClickTimerActive] = useState(false);\n  const getShortcutId = useCallback(() => {\n    const shortcutId = shortcutName.replace(/\\s/g, '');\n    return `desktop-shortcut-${shortcutId}`;\n  }, [shortcutName]);\n  useEffect(() => {\n    setShortcutId(getShortcutId());\n  }, [shortcutName, getShortcutId]);\n  useEffect(() => {\n    if (containerRef.current && Object.keys(scaledStyle).length === 0) {\n      //@ts-ignore\n      const boundingBox = containerRef.current.getBoundingClientRect();\n      setScaledStyle({\n        transformOrigin: 'center',\n        transform: 'scale(1.5)',\n        left: boundingBox.width / 4,\n        top: boundingBox.height / 4 // transform: 'scale(1.5)',\n        // left: boundingBox.width / 4,\n        // top: boundingBox.height / 4,\n\n      });\n    }\n  }, [scaledStyle]);\n  const handleClickOutside = useCallback(event => {\n    // @ts-ignore\n    const targetId = event.target.id;\n\n    if (targetId !== shortcutId) {\n      setIsSelected(false);\n    }\n\n    if (!isSelected && lastSelected) {\n      setLastSelected(false);\n    }\n  }, [isSelected, setIsSelected, setLastSelected, lastSelected, shortcutId]);\n  const handleClickShortcut = useCallback(() => {\n    if (doubleClickTimerActive) {\n      onOpen && onOpen();\n      setIsSelected(false);\n      setDoubleClickTimerActive(false);\n      return;\n    }\n\n    setIsSelected(true);\n    setLastSelected(true);\n    setDoubleClickTimerActive(true); // set double click timer\n\n    setTimeout(() => {\n      setDoubleClickTimerActive(false);\n    }, 300);\n  }, [doubleClickTimerActive, setIsSelected, onOpen]);\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isSelected, handleClickOutside]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `${shortcutId}`,\n    style: Object.assign({}, styles.appShortcut, scaledStyle),\n    onMouseDown: handleClickShortcut,\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${shortcutId}`,\n      style: styles.iconContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${shortcutId}`,\n        className: \"desktop-shortcut-icon\",\n        style: Object.assign({}, styles.iconOverlay, isSelected && styles.checkerboard, isSelected && {\n          WebkitMask: `url(${requiredIcon})`\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        icon: icon,\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isSelected ? 'selected-shortcut-border' : lastSelected ? 'shortcut-border' : '',\n      id: `${shortcutId}`,\n      style: isSelected ? {\n        backgroundColor: colors.blue\n      } : {},\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: `${shortcutId}`,\n        style: Object.assign({}, styles.shortcutText, invertText && !isSelected && {\n          color: 'black'\n        }),\n        children: shortcutName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DesktopShortcut, \"A5WX1mdj/QqF6iedAkzKnqaDA7k=\");\n\n_c = DesktopShortcut;\nconst styles = {\n  appShortcut: {\n    position: 'absolute',\n    width: 56,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlign: 'center'\n  },\n  shortcutText: {\n    cursor: 'pointer',\n    textOverflow: 'wrap',\n    fontFamily: 'MSSerif',\n    color: 'white',\n    fontSize: 8,\n    paddingRight: 2,\n    paddingLeft: 2\n  },\n  iconContainer: {\n    cursor: 'pointer',\n    paddingBottom: 3\n  },\n  iconOverlay: {\n    position: 'absolute',\n    top: 0,\n    width: 32,\n    height: 32\n  },\n  checkerboard: {\n    backgroundImage: `linear-gradient(45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(-45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${colors.blue} 75%),\n        linear-gradient(-45deg, transparent 75%, ${colors.blue} 75%)`,\n    backgroundSize: `2px 2px`,\n    backgroundPosition: `0 0, 0 1px, 1px -1px, -1px 0px`,\n    pointerEvents: 'none'\n  }\n};\nexport default DesktopShortcut;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopShortcut\");","map":{"version":3,"sources":["/Users/hyeonminsong/developer/Three.js/portfolio-inner-site/src/components/os/DesktopShortcut.tsx"],"names":["React","useCallback","useEffect","useRef","useState","colors","Icon","DesktopShortcut","icon","shortcutName","invertText","onOpen","isSelected","setIsSelected","shortcutId","setShortcutId","lastSelected","setLastSelected","containerRef","scaledStyle","setScaledStyle","requiredIcon","require","doubleClickTimerActive","setDoubleClickTimerActive","getShortcutId","replace","current","Object","keys","length","boundingBox","getBoundingClientRect","transformOrigin","transform","left","width","top","height","handleClickOutside","event","targetId","target","id","handleClickShortcut","setTimeout","document","addEventListener","removeEventListener","assign","styles","appShortcut","iconContainer","iconOverlay","checkerboard","WebkitMask","backgroundColor","blue","shortcutText","color","position","justifyContent","alignItems","flexDirection","textAlign","cursor","textOverflow","fontFamily","fontSize","paddingRight","paddingLeft","paddingBottom","backgroundImage","backgroundSize","backgroundPosition","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { IconName } from '../../assets/icons';\nimport colors from '../../constants/colors';\nimport { Icon } from '../general';\n\nexport interface DesktopShortcutProps {\n    icon: IconName;\n    shortcutName: string;\n    invertText?: boolean;\n    onOpen: () => void;\n}\n\nconst DesktopShortcut: React.FC<DesktopShortcutProps> = ({\n    icon,\n    shortcutName,\n    invertText,\n    onOpen,\n}) => {\n    const [isSelected, setIsSelected] = useState(false);\n    const [shortcutId, setShortcutId] = useState('');\n    const [lastSelected, setLastSelected] = useState(false);\n    const containerRef = useRef<any>();\n\n    const [scaledStyle, setScaledStyle] = useState({});\n\n    const requiredIcon = require(`../../assets/icons/${icon}.png`);\n    const [doubleClickTimerActive, setDoubleClickTimerActive] = useState(false);\n\n    const getShortcutId = useCallback(() => {\n        const shortcutId = shortcutName.replace(/\\s/g, '');\n        return `desktop-shortcut-${shortcutId}`;\n    }, [shortcutName]);\n\n    useEffect(() => {\n        setShortcutId(getShortcutId());\n    }, [shortcutName, getShortcutId]);\n\n    useEffect(() => {\n        if (containerRef.current && Object.keys(scaledStyle).length === 0) {\n            //@ts-ignore\n            const boundingBox = containerRef.current.getBoundingClientRect();\n            setScaledStyle({\n                transformOrigin: 'center',\n                transform: 'scale(1.5)',\n                left: boundingBox.width / 4,\n                top: boundingBox.height / 4,\n                // transform: 'scale(1.5)',\n                // left: boundingBox.width / 4,\n                // top: boundingBox.height / 4,\n            });\n        }\n    }, [scaledStyle]);\n\n    const handleClickOutside = useCallback(\n        (event: MouseEvent) => {\n            // @ts-ignore\n            const targetId = event.target.id;\n            if (targetId !== shortcutId) {\n                setIsSelected(false);\n            }\n            if (!isSelected && lastSelected) {\n                setLastSelected(false);\n            }\n        },\n        [isSelected, setIsSelected, setLastSelected, lastSelected, shortcutId]\n    );\n\n    const handleClickShortcut = useCallback(() => {\n        if (doubleClickTimerActive) {\n            onOpen && onOpen();\n            setIsSelected(false);\n            setDoubleClickTimerActive(false);\n            return;\n        }\n        setIsSelected(true);\n        setLastSelected(true);\n        setDoubleClickTimerActive(true);\n        // set double click timer\n        setTimeout(() => {\n            setDoubleClickTimerActive(false);\n        }, 300);\n    }, [doubleClickTimerActive, setIsSelected, onOpen]);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isSelected, handleClickOutside]);\n\n    return (\n        <div\n            id={`${shortcutId}`}\n            style={Object.assign({}, styles.appShortcut, scaledStyle)}\n            onMouseDown={handleClickShortcut}\n            ref={containerRef}\n        >\n            <div id={`${shortcutId}`} style={styles.iconContainer}>\n                <div\n                    id={`${shortcutId}`}\n                    className=\"desktop-shortcut-icon\"\n                    style={Object.assign(\n                        {},\n                        styles.iconOverlay,\n                        isSelected && styles.checkerboard,\n                        isSelected && {\n                            WebkitMask: `url(${requiredIcon})`,\n                        }\n                    )}\n                />\n                <Icon icon={icon} style={styles.icon} />\n            </div>\n            <div\n                className={\n                    isSelected\n                        ? 'selected-shortcut-border'\n                        : lastSelected\n                        ? 'shortcut-border'\n                        : ''\n                }\n                id={`${shortcutId}`}\n                style={isSelected ? { backgroundColor: colors.blue } : {}}\n            >\n                <p\n                    id={`${shortcutId}`}\n                    style={Object.assign(\n                        {},\n                        styles.shortcutText,\n                        invertText && !isSelected && { color: 'black' }\n                    )}\n                >\n                    {shortcutName}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    appShortcut: {\n        position: 'absolute',\n        width: 56,\n\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n    },\n    shortcutText: {\n        cursor: 'pointer',\n        textOverflow: 'wrap',\n        fontFamily: 'MSSerif',\n        color: 'white',\n        fontSize: 8,\n        paddingRight: 2,\n        paddingLeft: 2,\n    },\n    iconContainer: {\n        cursor: 'pointer',\n        paddingBottom: 3,\n    },\n    iconOverlay: {\n        position: 'absolute',\n        top: 0,\n        width: 32,\n        height: 32,\n    },\n    checkerboard: {\n        backgroundImage: `linear-gradient(45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(-45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${colors.blue} 75%),\n        linear-gradient(-45deg, transparent 75%, ${colors.blue} 75%)`,\n        backgroundSize: `2px 2px`,\n        backgroundPosition: `0 0, 0 1px, 1px -1px, -1px 0px`,\n        pointerEvents: 'none',\n    },\n};\n\nexport default DesktopShortcut;\n"]},"metadata":{},"sourceType":"module"}