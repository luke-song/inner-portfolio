{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(callback);\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAGA,SAASC,yBAAT,QAA0C,8BAA1C;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA2CC,KAA3C,EAA+D;AAC7D,QAAMC,aAAa,GAAGL,MAAM,CAACG,QAAD,CAA5B;AAGAF,2BAAyB,CAAC,MAAK;AAC7BI,iBAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFwB,EAEtB,CAACA,QAAD,CAFsB,CAAzB;AAKAJ,WAAS,CAAC,MAAK;AAGb,QAAI,CAACK,KAAD,IAAUA,KAAK,KAAK,CAAxB,EAA2B;AACzB;AACD;;AAED,UAAMG,EAAE,GAAGC,WAAW,CAAC,MAAMH,aAAa,CAACC,OAAd,EAAP,EAAgCF,KAAhC,CAAtB;AAEA,WAAO,MAAMK,aAAa,CAACF,EAAD,CAA1B;AACD,GAVQ,EAUN,CAACH,KAAD,CAVM,CAAT;AAWD;;AAED,eAAeF,WAAf","names":["useEffect","useRef","useIsomorphicLayoutEffect","useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval"],"sources":["/Users/hyeonminsong/developer/Three.js/portfolio-inner-site/node_modules/usehooks-ts/src/useInterval/useInterval.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n"]},"metadata":{},"sourceType":"module"}